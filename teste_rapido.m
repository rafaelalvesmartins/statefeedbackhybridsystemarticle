% TESTE_RAPIDO - Teste r√°pido das fun√ß√µes corrigidas

fprintf('=== TESTE R√ÅPIDO ===\n');

% Verificar se o script principal existe e pode ser executado
if exist('main_simulacao_completa.m', 'file')
    fprintf('‚úì main_simulacao_completa.m encontrado\n');
else
    fprintf('‚úó main_simulacao_completa.m n√£o encontrado\n');
end

% Verificar se as fun√ß√µes de simula√ß√£o existem
if exist('simulatesSampledInputCompleto.m', 'file')
    fprintf('‚úì simulatesSampledInputCompleto.m encontrado\n');
else
    fprintf('‚úó simulatesSampledInputCompleto.m n√£o encontrado\n');
end

if exist('simulatesSampledInputSimplified.m', 'file')
    fprintf('‚úì simulatesSampledInputSimplified.m encontrado\n');
else
    fprintf('‚úó simulatesSampledInputSimplified.m n√£o encontrado\n');
end

% Verificar se os dados existem
if exist('resultados_completos_massa_mola.mat', 'file')
    fprintf('‚úì resultados_completos_massa_mola.mat encontrado\n');
    fprintf('\nüöÄ TUDO PRONTO! Execute: main_simulacao_completa()\n');
else
    fprintf('‚ö† resultados_completos_massa_mola.mat n√£o encontrado\n');
    fprintf('üìã Execute primeiro: main_massa_mola_completo()\n');
    fprintf('   Em seguida: main_simulacao_completa()\n');
end

fprintf('\n=== INSTRU√á√ïES ===\n');
fprintf('1. Para executar simula√ß√£o completa: main_simulacao_completa()\n');
fprintf('2. Para testar com dados sint√©ticos: teste_simulacao()\n');
fprintf('3. Agora as fun√ß√µes t√™m verifica√ß√£o robusta de argumentos!\n');

fprintf('\n=== STATUS DAS CORRE√á√ïES ===\n');
fprintf('‚úÖ Erro de sintaxe MATLAB corrigido (operador tern√°rio)\n');
fprintf('‚úÖ Verifica√ß√£o de argumentos adicionada\n');
fprintf('‚úÖ Simula√ß√£o temporal completa implementada\n');
fprintf('‚úÖ An√°lise LMI robusta com fallbacks\n');
fprintf('‚úÖ Resposta focada nas quest√µes do revisor\n');